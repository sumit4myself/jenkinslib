#!/usr/bin/env groovy
import groovy.json.JsonOutput

node("master") {
    
    // =========== USER DEFINED VARS ===========
    def jenkinsUser = "Jenkins";
    def moduleDir01 = "databases"
    def moduleGitUrl01 = "https://${jenkinsUser}@fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-databases.git"
    // =========================================

    try {

        def projectVersion
        def incremental
        def projectEnv
        def gitBranchPath
        def ReleaseNumber
        def packageType = "zip"
		def newIncremental
        
		stage('Checkout') {
            deleteDir()
            
            gitBranchPath = "${AVS_GIT_BRANCH}".split('/')

            echo "Checkout in progress..."
            checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: moduleDir01], [$class: 'SubmoduleOption', disableSubmodules: false, parentCredentials: true, recursiveSubmodules: true, reference: '', trackingSubmodules: false, credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']],submoduleCfg: [], userRemoteConfigs: [[url: moduleGitUrl01, credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/authentication']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_authentication.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/avs_be']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_avs_be.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/avs_bookmark']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_avs_bookmark.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/avs_concurrent_streams']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_avs_concurrent_streams.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/commerce']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_commerce.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/cre_data_normalization']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_cre_data_normalization.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/csm']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_csm.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/live_spring_service']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_live_spring_service.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/npvrbe']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_npvrbe.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/npvrmediator']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_npvrmediator.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/pgw']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_pgw.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/pinboard']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_pinboard.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/reporting']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_reporting.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/resource_manager']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_resource_manager.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/rpgw']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_rpgw.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/software_upgrade']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_software_upgrade.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/stb_management']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_stb_management.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/technical_catalogue']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_technical_catalogue.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
			checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/vod_spring_service']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_vod_spring_service.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
       		checkout([$class: 'GitSCM', branches: [[name: '${AVS_GIT_BRANCH}']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'databases/group_definition']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://fleet.alm.accenture.com/avsbitbucket/scm/avs-m3/020-db_group_definition.git', credentialsId:'db9a3043-47f7-4274-aa62-7c3cd3b508e8']]])
        
	   }

        stage('Build') {
            echo "Build in progress..."

            if (RELEASE.toString().toBoolean()) {
                echo "Builnding a new RELEASE..."
                def projectJson = readJSON file: "${moduleDir01}/project.json"
                projectVersion = "${projectJson.version}"

                sh "touch /home/jenkins/${env.JOB_NAME}.json"
                sh "cat /home/jenkins/${env.JOB_NAME}.json > ${env.JOB_NAME}.json"
                
                try {
                    projectEnv = readJSON file: "${env.JOB_NAME}.json"
                } catch (JSONException) {
                    projectEnv = readJSON text: /{"${projectVersion}":"000"}/
                }
				
                if (!projectEnv[projectVersion]) {
                    projectEnv[projectVersion] = "000"
                }
                incremental = projectEnv[projectVersion]
                newIncremental = incremental as Integer
				echo "DBG 001 - newIncremental = ${newIncremental}"
				echo "DBG 001 - incremental = ${incremental}"
                newIncremental++
				echo "DBG 002 - newIncremental = ${newIncremental}"
                if (newIncremental < 10) {
                    incremental = "00" + newIncremental;
                } else if (newIncremental < 100) {
                    incremental = "0" + newIncremental;
                } else {
                    incremental = newIncremental as String;
                }
				echo "DBG 003 - incremental = ${incremental}"
                ReleaseNumber = "${projectVersion}-${incremental}"
            } else {
                echo "Builnding a new SNAPSHOT..."
                ReleaseNumber = "SNAPSHOT"
            }

            def size = gitBranchPath.length
            def branch = "${gitBranchPath[size-1]}"
            ReleaseNumber = "${ReleaseNumber}-${branch}"
            currentBuild.description = "${ReleaseNumber} - ${Comment}"
        }

        stage('Package') {
            if (ReleaseNumber.contains("SNAPSHOT")) {
                echo "No packaging for SNAPSHOT"
                currentBuild.result = "SUCCESS"
            } else {
                echo "Packaging..."
                sh "rm -rf temp"
                sh "mkdir -p temp"
                sh "cd databases ;  zip -r ../temp/${JOB_NAME}_REL_${ReleaseNumber}.zip ./* -x 'sdp/*' -x '.git' -D authentication/.git -x -D avs_be/.git -D avs_bookmark/.git -D avs_concurrent_streams/.git -D commerce/.git -D cre_data_normalization/.git -D csm/.git -D live_spring_service/.git -D npvrbe/.git -D npvrmediator/.git -D pgw/.git -D pinboard/.git -D reporting/.git -D resource_manager/.git -D rpgw/.git -D software_upgrade/.git -D stb_management/.git -D technical_catalogue/.git -D vod_spring_service/.git -x 'authentication/.git/*' -x 'avs_be/.git/*' -x 'avs_bookmark/.git/*' -x 'avs_concurrent_streams/.git/*' -x 'commerce/.git/*' -x 'cre_data_normalization/.git/*' -x 'csm/.git/*' -x 'live_spring_service/.git/*' -x 'npvrbe/.git/*' -x 'npvrmediator/.git/*' -x 'pgw/.git/*' -x 'pinboard/.git/*' -x 'reporting/.git/*' -x 'resource_manager/.git/*' -x 'rpgw/.git/*' -x 'software_upgrade/.git/*' -x 'stb_management/.git/*' -x 'technical_catalogue/.git/*' -x 'vod_spring_service/.git/*' -x 'Jenkinsfile' -x 'project.json'; cd .."
            }
        }

        stage('Archive') {
            if (ReleaseNumber.contains("SNAPSHOT")) {
                echo "No packaging for SNAPSHOT"
                currentBuild.result = "SUCCESS"
            } else {
                archiveArtifacts artifacts: 'temp/*.zip'
            }
        }

        stage('Store on Nexus') {
            if (ReleaseNumber.contains("SNAPSHOT")) {
                echo "SNAPSHOT dont upload to NEXUS"
                currentBuild.result = "SUCCESS"
            } else {
                echo "Storing on Nexus in progress..."
                def artifactFilepath = "temp/${JOB_NAME}_REL_${ReleaseNumber}.zip"
                
                nexusPublisher nexusInstanceId: 'avsnexus', nexusRepositoryId: 'AVS_Product_M3_Artifacts', packages: [[$class: 'MavenPackage', mavenAssetList: [[classifier: '', extension: '', filePath: artifactFilepath]], mavenCoordinate: [artifactId: 'database', groupId: 'com.accenture.avs.be.script', packaging: packageType, version: ReleaseNumber]]]
            }
        }

        stage('Finalize') {
            if (ReleaseNumber.contains("SNAPSHOT")) {
                currentBuild.result = "SUCCESS"
            } else {
                def urlToDownload = "https://avsdeveng.accenture.com/nexus/service/local/artifact/maven/redirect?r=AVS_Product_M3_Artifacts&g=com.accenture.avs.be.script&a=database&p=${packageType}&v=${ReleaseNumber}";
                currentBuild.description = "${ReleaseNumber} - ${Comment} - <a href=\"${urlToDownload}\">[Download]</a>"
            }
        }
    
        stage('Update Project version') {
            if (ReleaseNumber.contains("SNAPSHOT")) {
                currentBuild.result = "SUCCESS"
            } else {
                echo "Raising minor revision..."
                projectEnv[projectVersion] = newIncremental
                def projectEnvSerialized = JsonOutput.toJson(projectEnv)
                sh "echo ${projectEnvSerialized} > /home/jenkins/${env.JOB_NAME}.json"
            }
        }

    } catch (Error) {
        currentBuild.result = "FAILURE"
        println Error
    }
}